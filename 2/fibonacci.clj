#!/usr/bin/env clojure
; Each new term in the Fibonacci sequence is generated by adding the previous two 
; terms. By starting with 1 and 2, the first 10 terms will be:

; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

; Find the sum of all the even-valued terms in the sequence which do not exceed 
; four million.

(defn fib-recursive [n]
  (cond (= n 0) 0
        (= n 1) 1
        :else (+ (fib-recursive (- n 1))
                 (fib-recursive (- n 2)))))

(defn fib [n]
  (defn fib-iter [a b count]
    (if (= count 0)
      b
      (fib-iter (+ a b) a (dec count))))
  (fib-iter 1 0 n))

(def fibs(filter #(< % 4000000) (map fib (range 100))))
(def sum (apply + (filter even? fibs)))
(println sum)
